---
name: CI
'on':
  pull_request:
  push:
    branches:
      - main
  schedule:
    - cron: "0 2 * * 3"

defaults:
  run:
    working-directory: 'pellegrino.buildkiteagent'

jobs:

  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'pellegrino.buildkiteagent'
          token: ${{ github.token }}

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'

      - name: Caches python packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}


      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip3 install yamllint ansible-lint ansible

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

  molecule:
    name: Molecule
    runs-on: ubuntu-latest
    needs: lint
    strategy:
      matrix:
        distro:
          - centos8
          - ubuntu2004
          - debian10

    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: 'pellegrino.buildkiteagent'
          token: ${{ github.token }}

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: '3.x'


      - name: Caches python packages
        uses: actions/cache@v2
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('**/poetry.lock') }}-molecule-${{ hashFiles('**/pyproject.toml') }}


      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip3 install ansible molecule[docker] docker


      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: '1'
          ANSIBLE_FORCE_COLOR: '1'
          MOLECULE_DISTRO: ${{ matrix.distro }}
