---
name: Pull Requests
"on":
  pull_request:

defaults:
  run:
    working-directory: "pellegrino.buildkiteagent"

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: "pellegrino.buildkiteagent"
          token: ${{ github.token }}

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Caches python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('**/poetry.lock') }}-${{ hashFiles('**/pyproject.toml') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip3 install yamllint ansible-lint ansible

      - name: Lint code.
        run: |
          yamllint .
          ansible-lint

  test:
    name: Molecule tests
    runs-on: ubuntu-latest
    needs: build
    strategy:
      matrix:
        distro:
          - centos8
          - debian10
          - debian9
          - fedora32
          - ubuntu1804
          - ubuntu2004
    steps:
      - name: Check out the codebase.
        uses: actions/checkout@v2
        with:
          path: "pellegrino.buildkiteagent"
          token: ${{ github.token }}

      - name: Set up Python 3.
        uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      - name: Caches python packages
        uses: actions/cache@v3
        with:
          path: ~/.cache/pip
          key: ${{ hashFiles('**/poetry.lock') }}-molecule-${{ hashFiles('**/pyproject.toml') }}

      - name: Install dependencies
        if: steps.cache.outputs.cache-hit != 'true'
        run: pip3 install ansible molecule[docker] docker

      - name: Run Molecule tests.
        run: molecule test
        env:
          PY_COLORS: "1"
          ANSIBLE_FORCE_COLOR: "1"
          MOLECULE_DISTRO: ${{ matrix.distro }}
